[SIMD Max]

[SIMD Add]

[GeLU]
# Gelu: 0.5x(1+tanh(sqrt(2/pi) * (x+0.044715x^3)))
use_LUT = True
# unit: bit
precision = 8
# unit: bits    numbers in LUT use 16bit precision
# 3*3*16, each sample point needs 3 values, values are represented in 16bit
LUT_size_4 = 144
# 3*11*16
LUT_size_8 = 528
# 3*32*16
LUT_size_16 = 1536
# 3*407*16
LUT_size_32 = 19536

[Sigmond]
# sigmond: 1 / (1+exp(-x))
use_LUT = True
# unit: bit
precision = 8
# unit: bits    numbers in LUT use 16bit precision
# 3*2*16
LUT_size_4 = 96
# 3*7*16
LUT_size_8 = 336
# 3*28*16
LUT_size_16 = 1344
# 3*323*16
LUT_size_32 = 15504

[Tanh]
# tanh: tanh(x)
use_LUT = True
precision = 8
# unit: bits    numbers in LUT use 16bit precision
# 3*3*16
LUT_size_4 = 144
# 3*11*16
LUT_size_8 = 528
# 3*40*16
LUT_size_16 = 1920
# 3*494*16
LUT_size_32 = 23712

[Leaky ReLU]
# leaky relu: max(a * x, x)   //[a=0.01]
use_LUT = True
# unit: bits    numbers in LUT use 16bit precision
# 3*3*16
LUT_size = 144

[ELU]
# elu: if x>=0: x ; else: a*(exp(x) - 1)  //a=1
use_LUT = True
# unit: bits    numbers in LUT use 16bit precision
# 3*3*16
LUT_size_4 = 144
# 3*6*16
LUT_size_8 = 288
# 3*24*16
LUT_size_16 = 1152
# 3*281*16
LUT_size_32 = 13488

[SiLU]
# silu: x / (1+exp(-x))
use_LUT = True
# unit: bits    numbers in LUT use 16bit precision
# 3*3*16
LUT_size_4 = 144
# 3*9*16
LUT_size_8 = 432
# 3*36*16
LUT_size_16 = 1728
# 3*485*16
LUT_size_32 = 23280

[Exp]
# exp: e^x, x<0
use_LUT = True


[Sqrt]
# sqrt: x^(1/2)
use_LUT = True

